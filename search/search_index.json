{
    "docs": [
        {
            "location": "/",
            "text": "Toapi\n\uf0c1\n\n\nEvery web site provides APIs.\n\n\n\n\n\n\n\n\n\n\n\n\nOverview\n\uf0c1\n\n\nToapi is a \nclever\n, \nsimple\n and \nfast\n library letting any \nweb site provide APIs. In the past, we crawl data and storage them and create \napi service to share them maybe we should also update them regularly. \nThis library make things easy. The only thing you should do is defining your data, \nthey would be shared as api service automatically.\n\n\nGet Started\n\uf0c1\n\n\nInstallation\n\uf0c1\n\n\n$ pip install toapi\n$ toapi -v\ntoapi, version 0.1.12\n\n\n\n\n\nNew Project\n\uf0c1\n\n\n$ toapi new api\n2017/12/14 09:16:54 [New project] OK Creating project directory \"api\" \nCloning into 'api'...\nremote: Counting objects: 10, done.\nremote: Compressing objects: 100% (8/8), done.\nremote: Total 10 (delta 1), reused 10 (delta 1), pack-reused 0\nUnpacking objects: 100% (10/10), done.\nChecking connectivity... done.\n2017/12/14 09:16:56 [New project] OK Success! \n\n     cd api\n     toapi run\n\n\n\n\n\nRun\n\uf0c1\n\n\nIn the directory of 'api' created above. Run the command line as follows.\n\n\n$ toapi run\n2017/12/14 09:27:18 [Serving ] OK http://127.0.0.1:5000\n\n\n\n\n\nThen, everything is done. Visit http://127.0.0.1:5000 in your browser!\n\n\nDeploy\n\uf0c1\n\n\nA Toapi app is a flask app. So you can deploy it as follows:\n\n\n\n\nWhile lightweight and easy to use, Flask\u2019s built-in server is not suitable for production as it doesn\u2019t scale well and by default serves only one request at a time. Some of the options available for properly running Flask in production are documented here.\n\n\nIf you want to deploy your Flask application to a WSGI server not listed here, look up the server documentation about how to use a WSGI app with it. Just remember that your Flask application object is the actual WSGI application.\n\n\n\n\nDeployment Options \u2014 Flask Documentation (0.12)\n\n\nScreenshots\n\uf0c1\n\n\nRunning Log\n\uf0c1\n\n\n\n\nRunning Items\n\uf0c1\n\n\n\n\nRunning Status\n\uf0c1\n\n\n\n\nRunning Results\n\uf0c1\n\n\n\n\nFeatures\n\uf0c1\n\n\nMultiple caching\n\uf0c1\n\n\nToapi use cache to prevent repeated parsing and use storage to prevent sending request.\n\n\nMultiple sites\n\uf0c1\n\n\nA toapi app has an ability to gather pages of multiple websites and convert them to easy to use APIs\n\n\nEasy to deploy.\n\uf0c1\n\n\nA toapi app is a standard flask app, so that you can deploy your app as deploying a flask app.\n\n\nStatus Monitor\n\uf0c1\n\n\nA toapi app will automatically count kinds of states of itself and you can visit the states whenever you want.\n\n\nGetting help\n\uf0c1\n\n\nTo get help with Toapi, please use the \nGitHub issues",
            "title": "Introduce"
        },
        {
            "location": "/#toapi",
            "text": "Every web site provides APIs.",
            "title": "Toapi"
        },
        {
            "location": "/#overview",
            "text": "Toapi is a  clever ,  simple  and  fast  library letting any \nweb site provide APIs. In the past, we crawl data and storage them and create \napi service to share them maybe we should also update them regularly. \nThis library make things easy. The only thing you should do is defining your data, \nthey would be shared as api service automatically.",
            "title": "Overview"
        },
        {
            "location": "/#get-started",
            "text": "",
            "title": "Get Started"
        },
        {
            "location": "/#installation",
            "text": "$ pip install toapi\n$ toapi -v\ntoapi, version 0.1.12",
            "title": "Installation"
        },
        {
            "location": "/#new-project",
            "text": "$ toapi new api\n2017/12/14 09:16:54 [New project] OK Creating project directory \"api\" \nCloning into 'api'...\nremote: Counting objects: 10, done.\nremote: Compressing objects: 100% (8/8), done.\nremote: Total 10 (delta 1), reused 10 (delta 1), pack-reused 0\nUnpacking objects: 100% (10/10), done.\nChecking connectivity... done.\n2017/12/14 09:16:56 [New project] OK Success! \n\n     cd api\n     toapi run",
            "title": "New Project"
        },
        {
            "location": "/#run",
            "text": "In the directory of 'api' created above. Run the command line as follows.  $ toapi run\n2017/12/14 09:27:18 [Serving ] OK http://127.0.0.1:5000  Then, everything is done. Visit http://127.0.0.1:5000 in your browser!",
            "title": "Run"
        },
        {
            "location": "/#deploy",
            "text": "A Toapi app is a flask app. So you can deploy it as follows:   While lightweight and easy to use, Flask\u2019s built-in server is not suitable for production as it doesn\u2019t scale well and by default serves only one request at a time. Some of the options available for properly running Flask in production are documented here.  If you want to deploy your Flask application to a WSGI server not listed here, look up the server documentation about how to use a WSGI app with it. Just remember that your Flask application object is the actual WSGI application.   Deployment Options \u2014 Flask Documentation (0.12)",
            "title": "Deploy"
        },
        {
            "location": "/#screenshots",
            "text": "",
            "title": "Screenshots"
        },
        {
            "location": "/#running-log",
            "text": "",
            "title": "Running Log"
        },
        {
            "location": "/#running-items",
            "text": "",
            "title": "Running Items"
        },
        {
            "location": "/#running-status",
            "text": "",
            "title": "Running Status"
        },
        {
            "location": "/#running-results",
            "text": "",
            "title": "Running Results"
        },
        {
            "location": "/#features",
            "text": "",
            "title": "Features"
        },
        {
            "location": "/#multiple-caching",
            "text": "Toapi use cache to prevent repeated parsing and use storage to prevent sending request.",
            "title": "Multiple caching"
        },
        {
            "location": "/#multiple-sites",
            "text": "A toapi app has an ability to gather pages of multiple websites and convert them to easy to use APIs",
            "title": "Multiple sites"
        },
        {
            "location": "/#easy-to-deploy",
            "text": "A toapi app is a standard flask app, so that you can deploy your app as deploying a flask app.",
            "title": "Easy to deploy."
        },
        {
            "location": "/#status-monitor",
            "text": "A toapi app will automatically count kinds of states of itself and you can visit the states whenever you want.",
            "title": "Status Monitor"
        },
        {
            "location": "/#getting-help",
            "text": "To get help with Toapi, please use the  GitHub issues",
            "title": "Getting help"
        },
        {
            "location": "/about/installation/",
            "text": "Manual Installation\n\uf0c1\n\n\nIn order to manually install Toapi you'll need \nPython\n installed on your\nsystem, as well as the Python package manager, \npip\n. You can check if you have\nthese already installed from the command line:\n\n\n$ python --version\nPython 3.5.2\n$ pip --version\npip 9.0.1\n\n\n\n\n\nToapi supports Python3.5+.\n\n\nInstalling Python\n\uf0c1\n\n\nInstall \nPython\n by downloading an installer appropriate for your system from\n\npython.org\n and running it.\n\n\n\n\nNote\n\n\nIf you are installing Python on Windows, be sure to check the box to have\nPython added to your PATH if the installer offers such an option (it's\nnormally off by default).\n\n\n\n\nInstalling pip\n\uf0c1\n\n\nIf you're using a recent version of Python, the Python package manager, \npip\n,\nis most likely installed by default. However, you may need to upgrade pip to the\nlasted version:\n\n\npip install --upgrade pip\n\n\n\n\n\nIf you need to install \npip\n for the first time, download [get-pip.py].\nThen run the following command to install it:\n\n\npython get-pip.py\n\n\n\n\n\nInstalling Toapi\n\uf0c1\n\n\nInstall the \ntoapi\n package using pip:\n\n\npip install toapi\n\n\n\n\n\nYou should now have the \ntoapi\n command installed on your system. Run \ntoapi\n--version\n to check that everything worked okay.\n\n\n$ toapi --version\ntoapi, version 1.0.0\n\n\n\n\n\n\n\nNote\n\n\nIf you are using Windows, some of the above commands may not work\nout-of-the-box.\n\n\nA quick solution may be to preface every Python command with \npython -m\n\nlike this:\n\n\npython -m pip install toapi\npython -m api\n\n\n\n\n\nFor a more permanent solution, you may need to edit your \nPATH\n environment\nvariable to include the \nScripts\n directory of your Python installation.\nRecent versions of Python include a script to do this for you. Navigate to\nyour Python installation directory (for example \nC:\\Python34\\\n), open the\n\nTools\n, then \nScripts\n folder, and run the \nwin_add2path.py\n file by double\nclicking on it. Alternatively, you can \ndownload\n the script and run it\n(\npython win_add2path.py\n).",
            "title": "Installation"
        },
        {
            "location": "/about/installation/#manual-installation",
            "text": "In order to manually install Toapi you'll need  Python  installed on your\nsystem, as well as the Python package manager,  pip . You can check if you have\nthese already installed from the command line:  $ python --version\nPython 3.5.2\n$ pip --version\npip 9.0.1  Toapi supports Python3.5+.",
            "title": "Manual Installation"
        },
        {
            "location": "/about/installation/#installing-python",
            "text": "Install  Python  by downloading an installer appropriate for your system from python.org  and running it.   Note  If you are installing Python on Windows, be sure to check the box to have\nPython added to your PATH if the installer offers such an option (it's\nnormally off by default).",
            "title": "Installing Python"
        },
        {
            "location": "/about/installation/#installing-pip",
            "text": "If you're using a recent version of Python, the Python package manager,  pip ,\nis most likely installed by default. However, you may need to upgrade pip to the\nlasted version:  pip install --upgrade pip  If you need to install  pip  for the first time, download [get-pip.py].\nThen run the following command to install it:  python get-pip.py",
            "title": "Installing pip"
        },
        {
            "location": "/about/installation/#installing-toapi",
            "text": "Install the  toapi  package using pip:  pip install toapi  You should now have the  toapi  command installed on your system. Run  toapi\n--version  to check that everything worked okay.  $ toapi --version\ntoapi, version 1.0.0   Note  If you are using Windows, some of the above commands may not work\nout-of-the-box.  A quick solution may be to preface every Python command with  python -m \nlike this:  python -m pip install toapi\npython -m api  For a more permanent solution, you may need to edit your  PATH  environment\nvariable to include the  Scripts  directory of your Python installation.\nRecent versions of Python include a script to do this for you. Navigate to\nyour Python installation directory (for example  C:\\Python34\\ ), open the Tools , then  Scripts  folder, and run the  win_add2path.py  file by double\nclicking on it. Alternatively, you can  download  the script and run it\n( python win_add2path.py ).",
            "title": "Installing Toapi"
        },
        {
            "location": "/about/release-notes/",
            "text": "Release Notes\n\uf0c1\n\n\n\n\nUpgrading\n\uf0c1\n\n\nTo upgrade Toapi to the latest version, use pip:\n\n\npip install -U toapi\n\n\n\n\n\nYou can determine your currently installed version using \ntoapi --version\n:\n\n\n$ toapi --version\ntoapi, version 1.0.0\n\n\n\n\n\nMaintenance team\n\uf0c1\n\n\n\n\n@gaojiuli\n\n\n@howie6879\n\n\n@wuqiangroy",
            "title": "Release Notes"
        },
        {
            "location": "/about/release-notes/#release-notes",
            "text": "",
            "title": "Release Notes"
        },
        {
            "location": "/about/release-notes/#upgrading",
            "text": "To upgrade Toapi to the latest version, use pip:  pip install -U toapi  You can determine your currently installed version using  toapi --version :  $ toapi --version\ntoapi, version 1.0.0",
            "title": "Upgrading"
        },
        {
            "location": "/about/release-notes/#maintenance-team",
            "text": "@gaojiuli  @howie6879  @wuqiangroy",
            "title": "Maintenance team"
        },
        {
            "location": "/about/contributing/",
            "text": "Contributing to Toapi\n\uf0c1\n\n\nAn introduction to contributing to the Toapi project.\n\n\nThe Toapi project welcomes, and depends, on contributions from developers and\nusers in the open source community. Contributions can be made in a number of\nways, a few examples are:\n\n\n\n\nCode patches via pull requests\n\n\nDocumentation improvements\n\n\nBug reports and patch reviews\n\n\n\n\nCode of Conduct\n\uf0c1\n\n\nEveryone interacting in the Toapi project's codebases, issue trackers, chat\nrooms, and mailing lists is expected to follow the \nPyPA Code of Conduct\n.\n\n\nReporting an Issue\n\uf0c1\n\n\nPlease include as much detail as you can. Let us know your platform and Toapi\nversion. If the problem is visual (for example a theme or design issue) please\nadd a screenshot and if you get an error please include the full error and\ntraceback.\n\n\nInstalling for Development\n\uf0c1\n\n\nRun the following command. It is \nstrongly\n recommended that you do\nthis within a \nvirtualenv\n.\n\n\ngit clone https://github.com/gaojiuli/toapi\n\ncd\n toapi\npip install --editable .\n\n\n\n\n\nThis will install Toapi in development mode which binds the \ntoapi\n command\nto the git repository.\n\n\nRunning the tests\n\uf0c1\n\n\nTo run the tests, it is recommended that you use \npytest\n. This just needs\nto be pip installed and then the test suite can be ran for Toapi but running\nthe command \npytest\n in the root of your Toapi repository.\n\n\nIt will attempt to run the tests against all of the Python versions we\nsupport. So don't be concerned if you are missing some and they fail. The rest\nwill be verified by \nTravis\n when you submit a pull request.\n\n\nSubmitting Pull Requests\n\uf0c1\n\n\nOnce you are happy with your changes or you are ready for some feedback, push\nit to your fork and send a pull request. For a change to be accepted it will\nmost likely need to have tests and documentation if it is a new feature.",
            "title": "Contributing"
        },
        {
            "location": "/about/contributing/#contributing-to-toapi",
            "text": "An introduction to contributing to the Toapi project.  The Toapi project welcomes, and depends, on contributions from developers and\nusers in the open source community. Contributions can be made in a number of\nways, a few examples are:   Code patches via pull requests  Documentation improvements  Bug reports and patch reviews",
            "title": "Contributing to Toapi"
        },
        {
            "location": "/about/contributing/#code-of-conduct",
            "text": "Everyone interacting in the Toapi project's codebases, issue trackers, chat\nrooms, and mailing lists is expected to follow the  PyPA Code of Conduct .",
            "title": "Code of Conduct"
        },
        {
            "location": "/about/contributing/#reporting-an-issue",
            "text": "Please include as much detail as you can. Let us know your platform and Toapi\nversion. If the problem is visual (for example a theme or design issue) please\nadd a screenshot and if you get an error please include the full error and\ntraceback.",
            "title": "Reporting an Issue"
        },
        {
            "location": "/about/contributing/#installing-for-development",
            "text": "Run the following command. It is  strongly  recommended that you do\nthis within a  virtualenv .  git clone https://github.com/gaojiuli/toapi cd  toapi\npip install --editable .  This will install Toapi in development mode which binds the  toapi  command\nto the git repository.",
            "title": "Installing for Development"
        },
        {
            "location": "/about/contributing/#running-the-tests",
            "text": "To run the tests, it is recommended that you use  pytest . This just needs\nto be pip installed and then the test suite can be ran for Toapi but running\nthe command  pytest  in the root of your Toapi repository.  It will attempt to run the tests against all of the Python versions we\nsupport. So don't be concerned if you are missing some and they fail. The rest\nwill be verified by  Travis  when you submit a pull request.",
            "title": "Running the tests"
        },
        {
            "location": "/about/contributing/#submitting-pull-requests",
            "text": "Once you are happy with your changes or you are ready for some feedback, push\nit to your fork and send a pull request. For a change to be accepted it will\nmost likely need to have tests and documentation if it is a new feature.",
            "title": "Submitting Pull Requests"
        },
        {
            "location": "/about/license/",
            "text": "Copyright 2017 Jiuli Gao\n\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n\n\n\n\nUnless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.",
            "title": "License"
        },
        {
            "location": "/tutorials/introducing/",
            "text": "",
            "title": "Introducing Aim"
        },
        {
            "location": "/tutorials/step0-creating-new-project/",
            "text": "",
            "title": "Step 0 Creating New Project"
        },
        {
            "location": "/tutorials/step1-global-settings/",
            "text": "",
            "title": "Step 1 Global Settings"
        },
        {
            "location": "/tutorials/step2-redis/",
            "text": "",
            "title": "Step 2 Using Redis"
        },
        {
            "location": "/tutorials/step3-mongodb/",
            "text": "",
            "title": "Step 3 Using Mongodb"
        },
        {
            "location": "/tutorials/step4-defining-items/",
            "text": "",
            "title": "Step 4 Defining Items"
        },
        {
            "location": "/tutorials/step5-packagin-apis/",
            "text": "",
            "title": "Step 5 Packaging The APIs"
        },
        {
            "location": "/tutorials/testing/",
            "text": "",
            "title": "Bonus: Testing the Application"
        },
        {
            "location": "/topics/api/",
            "text": "",
            "title": "Api"
        },
        {
            "location": "/topics/settings/",
            "text": "",
            "title": "Settings"
        },
        {
            "location": "/topics/cache/",
            "text": "",
            "title": "Cache"
        },
        {
            "location": "/topics/storage/",
            "text": "",
            "title": "Storage"
        },
        {
            "location": "/topics/item/",
            "text": "",
            "title": "Item"
        },
        {
            "location": "/topics/selector/",
            "text": "",
            "title": "Selector"
        }
    ]
}